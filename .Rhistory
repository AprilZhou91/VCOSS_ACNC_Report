}
return(dataframe)
}
temp <- lapply(ACNC_Datasets_13to18,
yn_boolfix)
View(temp$datadotgov_ais13)
replace_na(ACNC_Datasets_13to18$datadotgov_ais13$operates_in_act, FALSE)
temp_vec <- replace_na(ACNC_Datasets_13to18$datadotgov_ais13$operates_in_act, FALSE)
recode(temp_vec, "y" = TRUE, "Y" = TRUE)
yn_boolfix <- function(dataframe){
for(col_name in colnames(dataframe)) {
if(c("n", "y") %in% tolower(unique(dataframe[[col_name]])) == c(TRUE, TRUE)) {
dataframe[[col_name]] <- recode(dataframe[[col_name]],
"n" = FALSE, "N" = FALSE,
"y" = TRUE, "Y" = TRUE)
} else if(c(NA, "y") %in% tolower(unique(dataframe[[col_name]])) == c(TRUE, TRUE)) {
# replace_na needed because recode(dataframe[[col_name]], NA = FALSE) does not work like that
dataframe[[col_name]] <- recode(dataframe[[col_name]],
"y" = TRUE, "Y" = TRUE)
dataframe[[col_name]] <- replace_na(dataframe[[col_name]],
FALSE)
}
}
return(dataframe)
}
temp <- lapply(ACNC_Datasets_13to18,
yn_boolfix)
View(temp$datadotgov_ais13)
unique(ACNC_Datasets_13to18$datadotgov_ais13$address_line_1)
unique(temp$datadotgov_ais13$address_line_1)
c(NA, "y") %in% tolower(unique(ACNC_Datasets_13to18$datadotgov_ais13$address_line_1)) == c(TRUE, TRUE)
c(NA, "y") %in% tolower(unique(ACNC_Datasets_13to18$datadotgov_ais13$address_line_1))
c(NA, "y") %in% tolower(unique(ACNC_Datasets_13to18$datadotgov_ais13$address_line_1)) == c(TRUE, TRUE)
c(NA, "y") %in% tolower(unique(ACNC_Datasets_13to18$datadotgov_ais13$address_line_1)) & c(TRUE, TRUE)
(c(NA, "y") %in% tolower(unique(ACNC_Datasets_13to18$datadotgov_ais13$address_line_1))) == c(TRUE, TRUE)
TRUE * FALSE
TRUE * TRUE
FALSE * FALSE
sum(TRUE, TRUE)
c(NA, "y") %in% tolower(unique(ACNC_Datasets_13to18$datadotgov_ais13$address_line_1))
sum(c(NA, "y") %in% tolower(unique(ACNC_Datasets_13to18$datadotgov_ais13$address_line_1)))
sum(c(NA, "y") %in% tolower(unique(ACNC_Datasets_13to18$datadotgov_ais13$address_line_1))) == 2
yn_boolfix <- function(dataframe){
for(col_name in colnames(dataframe)) {
if(sum(c("n", "y") %in% tolower(unique(dataframe[[col_name]]))) == 2) {
dataframe[[col_name]] <- recode(dataframe[[col_name]],
"n" = FALSE, "N" = FALSE,
"y" = TRUE, "Y" = TRUE)
} else if(sum(c(NA, "y") %in% tolower(unique(dataframe[[col_name]]))) == 2) {
# replace_na needed because recode(dataframe[[col_name]], NA = FALSE) does not work like that
dataframe[[col_name]] <- recode(dataframe[[col_name]],
"y" = TRUE, "Y" = TRUE)
dataframe[[col_name]] <- replace_na(dataframe[[col_name]],
FALSE)
}
}
return(dataframe)
}
temp <- lapply(ACNC_Datasets_13to18,
yn_boolfix)
View(temp$datadotgov_ais13)
View(temp$datadotgov_ais14); View(temp$datadotgov_ais15); View(temp$datadotgov_ais16); View(temp$datadotgov_ais17); View(temp$datadotgov_ais18)
rm(list=ls())
gc()
source('B:/Analytics/VCOSS_ACNC_Report/Data_Cleaning.R', echo=TRUE)
sort(unique(temp$datadotgov_ais13$main_activity))
View(filter(temp$datadotgov_ais13,
str_detect(main_activity, regex("social services",
ignore_case = TRUE)),
operates_in_vic == TRUE,
Community_sector == TRUE))
sort(unique(temp$datadotgov_ais13$Community_sector))
sort(unique(temp$datadotgov_ais13$operates_in_vic))
ignore_case = TRUE)))
View(filter(temp$datadotgov_ais13,
str_detect(main_activity, regex("social services",
ignore_case = TRUE))))
View(filter(temp$datadotgov_ais13,
str_detect(main_activity, regex("social services",
ignore_case = TRUE))))
Community_sector_varcreator <- function(dataframe) {
dataframe <- mutate(dataframe,
Community_sector = if_else(str_detect(main_activity,
regex(paste0(SocServ_activities,
collapse = "|"),
ignore_case = TRUE)),
true = TRUE, false = FALSE),
Vic_Community_sector = if_else(Community_sector == TRUE &
operates_in_vic == TRUE &
state == regex("vic", ignore_case = TRUE),
true = TRUE, false = FALSE))
return(dataframe)
}
temp <- lapply(ACNC_Datasets_13to18,
Community_sector_varcreator)
View(filter(temp$datadotgov_ais13,
str_detect(main_activity, regex("social services",
ignore_case = TRUE))),
operates_in_vic == TRUE,
Community_sector == TRUE)
View(filter(temp$datadotgov_ais13,
str_detect(main_activity, regex("social services",
ignore_case = TRUE)),
operates_in_vic == TRUE,
Community_sector == TRUE))
View(filter(temp$datadotgov_ais13,
str_detect(main_activity, regex("social services",
ignore_case = TRUE)),
str_detect(state, regex("vic|victoria")),
operates_in_vic == TRUE,
Community_sector == TRUE))
View(filter(temp$datadotgov_ais13,
str_detect(main_activity, regex("social services",
ignore_case = TRUE)),
# str_detect(state, regex("vic|victoria")),
operates_in_vic == TRUE,
Community_sector == TRUE))
View(filter(temp$datadotgov_ais13,
str_detect(main_activity, regex("social services",
ignore_case = TRUE)),
str_detect(state, regex("vic|victoria", ignore_case = TRUE)),
operates_in_vic == TRUE,
Community_sector == TRUE))
Community_sector_varcreator <- function(dataframe) {
dataframe <- mutate(dataframe,
Community_sector = if_else(str_detect(main_activity,
regex(paste0(SocServ_activities,
collapse = "|"),
ignore_case = TRUE)),
true = TRUE, false = FALSE),
Vic_Community_sector = if_else(Community_sector == TRUE &
operates_in_vic == TRUE &
state == regex("vic|victoria",
ignore_case = TRUE),
true = TRUE, false = FALSE))
return(dataframe)
}
temp <- lapply(ACNC_Datasets_13to18,
Community_sector_varcreator)
View(filter(temp$datadotgov_ais13,
str_detect(main_activity, regex("social services",
ignore_case = TRUE)),
str_detect(state, regex("vic|victoria", ignore_case = TRUE)),
operates_in_vic == TRUE,
Community_sector == TRUE))
Community_sector_varcreator <- function(dataframe) {
dataframe <- mutate(dataframe,
Community_sector = if_else(str_detect(main_activity,
regex(paste0(SocServ_activities,
collapse = "|"),
ignore_case = TRUE)),
true = TRUE, false = FALSE),
Vic_Community_sector = if_else(Community_sector == TRUE &
operates_in_vic == TRUE &
str_detect(state,
regex("vic|victoria",
ignore_case = TRUE)),
true = TRUE, false = FALSE))
return(dataframe)
}
temp <- lapply(ACNC_Datasets_13to18,
Community_sector_varcreator)
View(filter(temp$datadotgov_ais13,
str_detect(main_activity, regex("social services",
ignore_case = TRUE)),
str_detect(state, regex("vic|victoria", ignore_case = TRUE)),
operates_in_vic == TRUE,
Community_sector == TRUE))
View(filter(temp$datadotgov_ais15,
str_detect(main_activity, regex("social services",
ignore_case = TRUE)),
str_detect(state, regex("vic|victoria", ignore_case = TRUE)),
operates_in_vic == TRUE,
Community_sector == TRUE))
ACNC_Datasets_13to18$datadotgov_ais13 %>% colnames
rm(list=ls())
gc()
source('B:/Analytics/VCOSS_ACNC_Report/Data_Cleaning.R', echo=TRUE)
unique(ACNC_Datasets_13to18$datadotgov_ais13$Vic_Community_sector)
filter(ACNC_Datasets_13to18$datadotgov_ais13,
is.na(Vic_Community_sector)) %>% View
View(ACNC_Datasets_13to18$datadotgov_ais15)
colnames(ACNC_Datasets_13to18$datadotgov_ais15)
library(pacman)
p_load(tidyverse,
rvest,
lubridate,
ggplot2,
plotly,
readxl,
janitor)
str_replace_all(SocServ_activities,
" ", "_")
clean_names(SocServ_activities)
make_clean_names(SocServ_activities)
Community_sector_colnames
Community_sector_colnames <- make_clean_names(SocServ_activities)
temp <- sample_n(ACNC_Datasets_13to18$datadotgov_ais16, 100)
temp
transmute(temp,
community_sector_other = sum(any_of(Community_sector_colnames)))
?any_of
transmute(temp,
community_sector_other = sum(Community_sector_colnames))
transmute(temp,
community_sector_other = coalesce(Community_sector_colnames))
noquote(Community_sector_colnames)
transmute(temp,
community_sector_other = coalesce(noquote(Community_sector_colnames)))
transmute(temp,
community_sector_other = coalesce(Community_sector_colnames[1]))
transmute(temp,
community_sector_other = coalesce(Community_sector_colnames[1:2]))
?rowwise()
transmute(rowwise(temp),
community_sector_other = coalesce(Community_sector_colnames[1:2]))
transmute(rowwise(temp),
community_sector_other = coalesce(Community_sector_colnames[1]))
transmute(rowwise(temp),
community_sector_other = coalesce(Community_sector_colnames))
Community_sector_colnames
transmute(rowwise(temp),
community_sector_other = sum(noquote(Community_sector_colnames)))
noquote(Community_sector_colnames)
transmute(rowwise(temp),
community_sector_other = sum(noquote(Community_sector_colnames[1])))
transmute(temp,
sum(Community_sector_colnames))
?any_of
temp_df <- select(temp, any_of(Community_sector_colnames))
temp_df
colnames(temp_df)
Community_sector_colnames %in% colnames(temp_df)
Community_sector_colnames[which(Community_sector_colnames %in% colnames(temp_df))]
matching_cols <- Community_sector_colnames[which(Community_sector_colnames %in% colnames(temp_df))]
mutate(temp_df,
sum(matching_cols[1]))
class(temp_df$emergency_relief)
sum(temp_df$emergency_relief)
mutate(temp_df,
sum(matching_cols))
mutate(rowwise(temp_df),
sum(matching_cols))
summarise(rowwise(temp_df),
sum(matching_cols))
matching_cols
summarise(rowwise(temp_df),
sum(matching_cols[1]))
summarise(rowwise(temp_df),
sum(noquote(matching_cols)))
summarise(rowwise(temp_df),
sum(emergency_relief))
mutate(rowwise(temp_df),
sum(emergency_relief))
select(temp_df, matching_cols)
mutate(rowwise(temp_df),
sum(matching_cols))
summarise(rowwise(temp_df),
sum(all_of(matching_cols)))
rlang::syms()
?rlang::syms()
syms(matching_cols)
summarise(rowwise(temp_df),
sum(syms(matching_cols)))
syms(matching_cols)
summarise(temp_df,
sum(syms(matching_cols)))
syms_colnames <- syms(matching_cols)
paste(syms_colnames)
paste(!!!syms_colnames)
paste(!!!syms_colnames, sep = "-")
.syms_colnames <- syms(matching_cols)
.syms_colnames
paste(!!!.syms_colnames)
paste(.syms_colnames, sep = "-")
paste(.syms_colnames, collapse = "-")
mutate_if(temp_df,
names(temp_df) %in% matching_cols,
sum(matching_cols))
?funs
temp_df %>%
mutate_if(names(.) %in% matching_cols,
funs(sum(.)))
temp_df %>%
mutate_if(names(.) %in% matching_cols,
sum(.))
temp_df %>%
rowwise() %>%
mutate_if(names(.) %in% matching_cols,
funs(sum(.)))
temp_df
temp_df %>%
mutate_if(names(.) %in% matching_cols,
funs(sum(.)))
?across
??across
mutate(group_by(temp_df,
across(all_of(matching_cols))),
sum(.))
?dplyr
install.packages(c("backports", "bookdown", "broom", "data.table", "dbplyr", "devtools", "dplyr", "DT", "ellipsis", "fs", "ggplot2", "glue", "haven", "htmltools", "httpuv", "httr", "IRkernel", "isoband", "jsonlite", "knitr", "later", "lemon", "lubridate", "modelr", "openssl", "pillar", "pkgbuild", "pkgload", "processx", "promises", "ps", "Rcpp", "RcppArmadillo", "remotes", "rgdal", "rlang", "rmarkdown", "roxygen2", "rvest", "scales", "shiny", "sys", "tibble", "tidyr", "tidyselect", "tinytex", "TTR", "vctrs", "xfun"))
install.packages(c("MASS", "mgcv", "nlme", "survival"), lib="B:/Programs/R/R-4.0.2/library")
library(dplyr)
install.packages(c("backports", "bookdown", "broom", "data.table", "dbplyr", "devtools", "dplyr", "DT", "ellipsis", "fs", "ggplot2", "glue", "haven", "htmltools", "httpuv", "httr", "IRkernel", "isoband", "jsonlite", "knitr", "later", "lemon", "lubridate", "modelr", "openssl", "pillar", "pkgbuild", "pkgload", "processx", "promises", "ps", "Rcpp", "RcppArmadillo", "remotes", "rgdal", "rlang", "rmarkdown", "roxygen2", "rvest", "scales", "shiny", "sys", "tibble", "tidyr", "tidyselect", "tinytex", "TTR", "vctrs", "xfun"))
install.packages(c("mgcv", "nlme", "survival"), lib="B:/Programs/R/R-4.0.2/library")
p_load(tidyverse,
rvest,
lubridate,
ggplot2,
plotly,
readxl,
janitor,
update = TRUE)
library(pacman)
p_load(tidyverse,
rvest,
lubridate,
ggplot2,
plotly,
readxl,
janitor,
update = TRUE)
install.packages(c("backports", "dplyr", "ellipsis", "glue", "Rcpp", "rlang", "tibble", "vctrs"))
install.packages(c("mgcv", "nlme", "survival"), lib="B:/Programs/R/R-4.0.2/library")
?across
??across
??dplyr::across
p_load(tidyverse,
rvest,
lubridate,
ggplot2,
plotly,
readxl,
janitor)
library(pacman)
p_load(tidyverse,
rvest,
lubridate,
ggplot2,
plotly,
readxl,
janitor)
across(temp_df,
.cols = all_of(matching_cols),
.fns = sum)
mutate(across(temp_df,
.cols = all_of(matching_cols),
.fns = sum))
mutate(across(temp_df,
.cols = all_of(matching_cols),
.fns = ~sum(.x)))
temp_df %>%
mutate(across(matching_cols,
~sum(.x, na.rm = TRUE)))
temp_df %>%
rowwise() %>%
mutate(sum = sum(c_across(matching_cols)))
temp_df %>%
rowwise() %>%
mutate(bool = if_else(sum(c_across(matching_cols))>0,
true = TRUE, false = FALSE))
temp_func <- function(dataset) {
temp_df <- select(dataset, any_of(Community_sector_colnames))
matching_cols <- colnames(temp_df)[which(colnames(temp_df) %in% Community_sector_colnames)]
temp_df <- mutate(rowwise(dataset),
community_sector_other = if_else(sum(c_across(matching_cols),
na.rm = TRUE),
true = TRUE, false = FALSE))
}
temp_func(ACNC_Datasets_13to18$datadotgov_ais15)
temp_func <- function(dataset) {
temp_df <- select(dataset, any_of(Community_sector_colnames))
matching_cols <- colnames(temp_df)[which(colnames(temp_df) %in% Community_sector_colnames)]
temp_df <- mutate(rowwise(dataset),
community_sector_other = if_else(sum(c_across(matching_cols)>0,
na.rm = TRUE),
true = TRUE, false = FALSE))
}
temp_func(ACNC_Datasets_13to18$datadotgov_ais15)
temp_func <- function(dataset) {
temp_df <- select(dataset, any_of(Community_sector_colnames))
matching_cols <- colnames(temp_df)[which(colnames(temp_df) %in% Community_sector_colnames)]
temp_df <- mutate(rowwise(dataset),
community_sector_other = if_else(sum(c_across(matching_cols),
na.rm = TRUE)>0,
true = TRUE, false = FALSE))
}
temp_func(ACNC_Datasets_13to18$datadotgov_ais15)
temp_func <- function(dataset) {
temp_df <- select(dataset, any_of(Community_sector_colnames))
matching_cols <- colnames(temp_df)[which(colnames(temp_df) %in% Community_sector_colnames)]
temp_df <- mutate(rowwise(dataset),
community_sector_other = if_else(sum(c_across(matching_cols),
na.rm = TRUE)>0,
true = TRUE, false = FALSE))
return(temp_df)
}
temp_func(ACNC_Datasets_13to18$datadotgov_ais15)
temp_func(ACNC_Datasets_13to18$datadotgov_ais15) %>% View
Community_sector_other_varcreator <- function(dataset) {
temp_df <- select(dataset, any_of(Community_sector_colnames))
matching_cols <- colnames(temp_df)[which(colnames(temp_df) %in% Community_sector_colnames)]
temp_df <- mutate(rowwise(dataset),
community_sector_other = if_else(sum(c_across(matching_cols),
na.rm = TRUE)>0,
true = TRUE, false = FALSE))
return(temp_df)
}
lapply(ACNC_Datasets_13to18,
Community_sector_other_varcreator)
rm(list=ls())
source('B:/Analytics/VCOSS_ACNC_Report/Data_Cleaning.R', echo=TRUE)
source('B:/Analytics/VCOSS_ACNC_Report/Data_Cleaning.R', echo=TRUE)
library(pacman)
p_load(tidyverse,
rvest,
lubridate,
ggplot2,
plotly,
readxl,
janitor)
ACNC_Yearly_Datasets_fp <- file.path(getwd(), "Datasets", "Individual_charities")
file.path(getwd(), "Datasets", "Individual_charities")
ACNC_Yearly_Datasets_fp
list.files(ACNC_Yearly_Datasets_fp)
ACNC_Yearly_Datasets_fp
getwd()
setwd("B:/Analytics/VCOSS_ACNC_Report")
file.path(getwd(), "Datasets", "Individual_charities")
source('B:/Analytics/VCOSS_ACNC_Report/Data_Cleaning.R', echo=TRUE)
Community_sector_varcreator <- function(dataframe) {
dataframe <- mutate(dataframe,
community_sector_main = if_else(str_detect(main_activity,
regex(paste0(SocServ_activities,
collapse = "|"),
ignore_case = TRUE)),
true = TRUE, false = FALSE),
vic_Community_sector = if_else(community_sector == TRUE &
operates_in_vic == TRUE &
community_sector_other == TRUE &
str_detect(state,
regex("vic|victoria",
ignore_case = TRUE)),
true = TRUE, false = FALSE))
return(dataframe)
}
lapply(ACNC_Datasets_13to18,
Community_sector_varcreator)
Community_sector_varcreator <- function(dataframe) {
dataframe <- mutate(dataframe,
community_sector_main = if_else(str_detect(main_activity,
regex(paste0(SocServ_activities,
collapse = "|"),
ignore_case = TRUE)),
true = TRUE, false = FALSE),
vic_Community_sector = if_else(community_sector_main == TRUE &
operates_in_vic == TRUE &
community_sector_other == TRUE &
str_detect(state,
regex("vic|victoria",
ignore_case = TRUE)),
true = TRUE, false = FALSE))
return(dataframe)
}
lapply(ACNC_Datasets_13to18,
Community_sector_varcreator)
rm(list=ls())
gc()
source('B:/Analytics/VCOSS_ACNC_Report/Data_Cleaning.R', echo=TRUE)
a <- 1
b <- 2
c <- 3
d <- 4
ifelse(a == b | c == d,
true = TRUE, false = FALSE)
if_else(a == b | c == d,
true = TRUE, false = FALSE)
if_else(a == b || c == d,
true = TRUE, false = FALSE)
if_else((a == b | c == d),
true = TRUE, false = FALSE)
a == b
c == d
d
d <- 3
if_else((a == b | c == d),
true = TRUE, false = FALSE)
c
a <- 1
b <- 3
c <- 3
d <- 4
a == b
c == d
if_else((a == b | c == d),
true = TRUE, false = FALSE)
rm(list=ls())
gc()
source('B:/Analytics/VCOSS_ACNC_Report/Data_Cleaning.R', echo=TRUE)
lapply(ACNC_Datasets_13to18,
function(x) {filter(x, vic_community_sector == TRUE)})
temp <- lapply(ACNC_Datasets_13to18,
function(x) {filter(x, vic_community_sector == TRUE)})
View(temp$datadotgov_ais13)
rm(list=ls())
gc()
source('B:/Analytics/VCOSS_ACNC_Report/Data_Cleaning.R', echo=TRUE)
View(ACNC_Datasets_13to18)
View(ACNC_Datasets_13to18$datadotgov_ais16)
rm(list=ls())
gc()
source('B:/Analytics/VCOSS_ACNC_Report/Data_Cleaning.R', echo=TRUE)
