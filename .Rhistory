intersect(intersect(ACNC_colnames[1], ACNC_colnames[2]), ACNC_colnames[3])
source('B:/Analytics/VCOSS_ACNC_Report/Data_Cleaning.R', echo=TRUE)
intersect(intersect(ACNC_colnames[1], ACNC_colnames[2]), ACNC_colnames[3])
ACNC_colnames
intersect(ACNC_colnames[1], ACNC_colnames[2])
ACNC_colnames[1]
c(ACNC_colnames[2])
names(ACNC_colnames[1])
intersect(letters[1:10], letters[3:12])
letters[1:10]
ACNC_colnames <- sapply(ACNC_Datasets_13to18, colnames)
class(ACNC_colnames)
intersect(intersect(ACNC_colnames[1], ACNC_colnames[2]), ACNC_colnames[3])
concatenate(ACNC_colnames[1])
c(ACNC_colnames[1])
class(ACNC_colnames[1])
class(as.vector(ACNC_colnames[1]))
class(ACNC_colnames[[1]])
ACNC_colnames[[1]]
intersect(intersect(ACNC_colnames[[1]], ACNC_colnames[[2]]), ACNC_colnames[[3]])
sort(intersect(intersect(ACNC_colnames[[1]], ACNC_colnames[[2]]), ACNC_colnames[[3]]))
ACNC_Datasets_13to18[[1]]
names(ACNC_Datasets_13to18[[1]])
ACNC_Datasets_13to18[[1]]$names(ACNC_Datasets_13to18[1])
lapply(ACNC_Datasets_13to18,
function(year){
year$Year <- paste0(str_extract(names(year), "\\d\\d"))
})
lapply(ACNC_Datasets_13to18,
function(year){
year$Year <<- paste0(str_extract(names(year), "\\d\\d"))
})
lapply(ACNC_Datasets_13to18,
function(year){
year$Year = paste0(str_extract(names(year), "\\d\\d"))
})
length(ACNC_colnames$datadotgov_ais13)
lapply(ACNC_Datasets_13to18,
function(year){
cbind(year, Year = str_extract(names(ACNC_Datasets_13to18[year]), "\\d\\d"))
})
for(year in ACNC_Datasets_13to18) {
year_val <- str_extract(names(ACNC_Datasets_13to18[year]), "\\d\\d")
ACNC_Datasets_13to18[[year]]$Year <- year_val
}
ACNC_Datasets_13to18[year]
for(year in ACNC_Datasets_13to18) {
print(year)
# year_val <- str_extract(names(ACNC_Datasets_13to18[year]), "\\d\\d")
# ACNC_Datasets_13to18[[year]]$Year <- year_val
}
ACNC_Datasets_13to18[1]
for(year in ACNC_Datasets_13to18) {
names(year)
# year_val <- str_extract(names(ACNC_Datasets_13to18[year]), "\\d\\d")
# ACNC_Datasets_13to18[[year]]$Year <- year_val
}
for(year in ACNC_Datasets_13to18) {
print(names(year))
# year_val <- str_extract(names(ACNC_Datasets_13to18[year]), "\\d\\d")
# ACNC_Datasets_13to18[[year]]$Year <- year_val
}
?names
objects(ACNC_Datasets_13to18)
objects(ACNC_Datasets_13to18$datadotgov_ais13)
objects(ACNC_Datasets_13to18[1])
for(year in ACNC_Datasets_13to18) {
print(objects(year))
# year_val <- str_extract(names(ACNC_Datasets_13to18[year]), "\\d\\d")
# ACNC_Datasets_13to18[[year]]$Year <- year_val
}
for(year in ACNC_Datasets_13to18) {
print(class(year))
# year_val <- str_extract(names(ACNC_Datasets_13to18[year]), "\\d\\d")
# ACNC_Datasets_13to18[[year]]$Year <- year_val
}
length(objects(ACNC_Datasets_13to18))
for(i in length(objects(ACNC_Datasets_13to18))) {
print(objects(ACNC_Datasets_13to18[i]))
# year_val <- str_extract(names(ACNC_Datasets_13to18[year]), "\\d\\d")
# ACNC_Datasets_13to18[[year]]$Year <- year_val
}
for(i in 1;length(objects(ACNC_Datasets_13to18))) {
print(objects(ACNC_Datasets_13to18[i]))
# year_val <- str_extract(names(ACNC_Datasets_13to18[year]), "\\d\\d")
# ACNC_Datasets_13to18[[year]]$Year <- year_val
}
for(i in 1:length(objects(ACNC_Datasets_13to18))) {
print(objects(ACNC_Datasets_13to18[i]))
# year_val <- str_extract(names(ACNC_Datasets_13to18[year]), "\\d\\d")
# ACNC_Datasets_13to18[[year]]$Year <- year_val
}
for(i in 1:length(objects(ACNC_Datasets_13to18))) {
object_name <- objects(ACNC_Datasets_13to18[i])
year_val <- paste0("20", str_extract(object_name, "\\d\\d"))
ACNC_Datasets_13to18[[i]]$Year <- year_val
}
sort(colnames(ACNC_Datasets_13to18$datadotgov_ais13))
unique(ACNC_Datasets_13to18$datadotgov_ais13$Year)
unique(ACNC_Datasets_13to18$datadotgov_ais14$Year)
unique(ACNC_Datasets_13to18$datadotgov_ais15$Year)
ACNC_colnames
length(ACNC_colnames)
ACNC_Datasets_13to18[1:2]
ACNC_colnames[1:2]
intersect(ACNC_colnames[1:2])
colnames_df <- data.frame()
for(year in 1:length(ACNC_colnames)) {
colnames_df <- cbind(colnames_df,
ACNC_colnames[[year]])
}
colnames_df
colnames_df(colnames_df,
ACNC_colnames[[1]])
colnames_df
colnames_df
colnames_df <- NULL
colnames_df(colnames_df,
ACNC_colnames[[1]])
colnames_df <- data.frame()
cbind(colnames_df,
ACNC_colnames[[1]])
colnames_df
colnames_df <- NULL
cbind(colnames_df,
ACNC_colnames[[1]])
colnames_df
for(year in 1:length(ACNC_colnames)) {
colnames_df <- cbind(colnames_df,
ACNC_colnames[[year]])
}
colnames_df
colnames_df <- NULL
colnames_df
for(year in 1:length(ACNC_colnames)) {
object_name <- objects(ACNC_colnames[year])
colnames_df <- cbind(colnames_df,
object_name = ACNC_colnames[[year]])
}
colnames_df
object_name
quo(object_name)
quote(object_name)
noquote(object_name)
colnames_df <- NULL
for(year in 1:length(ACNC_colnames)) {
object_name <- objects(ACNC_colnames[year])
colnames_df <- cbind(colnames_df,
noquote(object_name) = ACNC_colnames[[year]])
}
colnames_df
colnames_df <- NULL
for(year in 1:length(ACNC_colnames)) {
object_name <- objects(ACNC_colnames[year])
colnames_df <- cbind(colnames_df,
paste0(object_name) = ACNC_colnames[[year]])
}
for(year in 1:length(ACNC_colnames)) {
object_name <- objects(ACNC_colnames[year])
colnames_df <- cbind(colnames_df,
paste0(object_name) = ACNC_colnames[[year]])
}
assign?
?assign
colnames_df <- NULL
for(year in 1:length(ACNC_colnames)) {
object_name <- objects(ACNC_colnames[year])
colnames_df <- cbind(colnames_df,
object_name <<- ACNC_colnames[[year]])
}
colnames_df
class(colnames_df)
as.data.frame(colnames_df)
sapply(ACNC_colnames, length)
max(sapply(ACNC_colnames, length))
maxlen_colnames <- max(sapply(ACNC_colnames, length))
ACNC_colnames[[1]]
ACNC_colnames[[1]][3]
colnames_df <- NULL
maxlen_colnames <- max(sapply(ACNC_colnames, length))
for(year in 1:maxlen_colnames) {
object_name <- objects(ACNC_colnames[year])
year_colnameslen <- length(ACNC_colnames[[year]])
if(year_colnameslen < maxlen_colnames) {
ACNC_colnames[[year]][year_colnameslen+1:maxlen_colnames] <- NA
}
colnames_df <- cbind(colnames_df,
object_name <<- ACNC_colnames[[year]])
}
nrow(colnames_df)
ACNC_colnames[[year]]
year
maxlen_colnames
colnames_df <- NULL
for(year in 1:length(objects(ACNC_colnames))) {
object_name <- objects(ACNC_colnames[year])
year_colnameslen <- length(ACNC_colnames[[year]])
if(year_colnameslen < maxlen_colnames) {
ACNC_colnames[[year]][year_colnameslen+1:maxlen_colnames] <- NA
}
colnames_df <- cbind(colnames_df,
object_name <<- ACNC_colnames[[year]])
}
nrow(colnames_df)
as.data.frame(colnames_df)View
library(magrittr)
as.data.frame(colnames_df) %>% View
rm(list=ls())
gc()
library(pacman)
p_load(tidyverse,
rvest,
lubridate,
ggplot2,
plotly,
readxl,
httr,
jsonlite)
ACNC_Yearly_Datasets_fp <- file.path(getwd(), "Datasets", "Individual_charities")
ACNC_Yearly_Datasets <- list.files(ACNC_Yearly_Datasets_fp)
ACNC_Datasets_13to18 <- sapply(X = ACNC_Yearly_Datasets,
FUN = function(year){
read_excel(path = file.path(ACNC_Yearly_Datasets_fp, year))
})
names(ACNC_Datasets_13to18) <- sapply(names(ACNC_Datasets_13to18),
function(year){str_remove_all(year, ".xlsx")})
colnames(ACNC_Datasets_13to18$datadotgov_ais13)
library(janitor)
clean_names(colnames(ACNC_Datasets_13to18$datadotgov_ais13))
colnames(clean_names(ACNC_Datasets_13to18$datadotgov_ais13))
p_load(tidyverse,
rvest,
lubridate,
ggplot2,
plotly,
readxl,
janitor)
lapply(ACNC_Datasets_13to18,
clean_names)
ACNC_Datasets_13to18 <- lapply(ACNC_Datasets_13to18,
clean_names)
## Creates a new column in each data frame and assigns the year to it based on
## the name of the dataframe within the list
for(year in 1:length(objects(ACNC_Datasets_13to18))) {
object_name <- objects(ACNC_Datasets_13to18[year])
year_val <- paste0("20", str_extract(object_name, "\\d\\d"))
ACNC_Datasets_13to18[[year]]$Year <- year_val
}
ACNC_colnames <- lapply(ACNC_Datasets_13to18, colnames)
colnames_df <- NULL
maxlen_colnames <- max(sapply(ACNC_colnames, length))
for(year in 1:length(objects(ACNC_colnames))) {
object_name <- objects(ACNC_colnames[year])
year_colnameslen <- length(ACNC_colnames[[year]])
if(year_colnameslen < maxlen_colnames) {
ACNC_colnames[[year]][(year_colnameslen+1):(maxlen_colnames)] <- NA
}
colnames_df <- cbind(colnames_df,
ACNC_colnames[[year]])
}
colnames(colnames_df) <- objects(ACNC_colnames)
for(col_index in 1:ncol(colnames_df)) {
if(col_index == 1) {
common_cols <- colnames_df[,1]
} else{
common_cols <- intersect(common_cols,
colnames_df[,col_index])
}
}
common_cols
select(ACNC_Datasets_13to18,
common_cols)
select(ACNC_Datasets_13to18$datadotgov_ais13,
common_cols)
lapply(ACNC_Datasets_13to18,
select(common_cols))
select(ACNC_Datasets_13to18,
common_cols)
select(ACNC_Datasets_13to18$datadotgov_ais13,
common_cols)
common_col_selector <- function(data) {
selected_data <- select(data,
common_cols)
return(selected_data)
}
common_col_selector(ACNC_Datasets_13to18$datadotgov_ais13)
lapply(ACNC_Datasets_13to18,
common_col_selector)
ACNC_Datasets_13to18 <- lapply(ACNC_Datasets_13to18,
common_col_selector)
ACNC_Datasets_13to18
source('B:/Analytics/VCOSS_ACNC_Report/Data_Cleaning.R', echo=TRUE)
source('B:/Analytics/VCOSS_ACNC_Report/Data_Cleaning.R', echo=TRUE)
source('B:/Analytics/VCOSS_ACNC_Report/Data_Cleaning.R', echo=TRUE)
